{"version":3,"sources":["components/Button/Button.jsx","styles/img/hand.png","sections/GameStart/GameStart.jsx","components/GainPanel/GainPanel.jsx","sections/Question/Question.jsx","store/actions/actionCreator.js","store/actions/actions.js","App.js","reportWebVitals.js","store/reducers/index.js","store/reducers/endGameData.js","store/store.js","index.js"],"names":["Button","id","disabled","className","onClick","children","defaultProps","GameStart","gameConfig","replayGame","useSelector","endGameData","shallowEqual","history","useHistory","newGame","src","hand","alt","gain","push","GainPanel","mobile","indexV","data","useState","gainsArray","setGainsArray","useEffect","newData","slice","reverse","map","elem","index","arrEN","Question","questionNumber","question","answers","correctAnswers","dispatch","useDispatch","setDisabled","modalState","setModalState","sendGameData","value","type","payload","handleChooseAnswer","target","selectedValue","button","parentNode","includes","classList","remove","add","setTimeout","item","App","setGameConfig","fetch","then","response","json","result","hashType","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","state","action","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54d6817c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Button = ({id, disabled, className, onClick, children}) => {\r\n    return(\r\n        <button id={id} disabled={disabled} className={className} onClick={onClick}>{children}</button>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    className: PropTypes.string,\r\n    disabled: PropTypes.string,\r\n    id: PropTypes.string,\r\n    children: PropTypes.node,\r\n};\r\n\r\n\r\nButton.defaultProps = {\r\n    children: 'Button',\r\n    onClick: () => {},\r\n    className: 'button',\r\n    disabled: '',\r\n    id: '',\r\n};\r\n\r\n\r\nexport default Button;","export default __webpack_public_path__ + \"static/media/hand.7e02f3f6.png\";","import React from 'react';\r\nimport Button from \"../../components/Button\";\r\nimport hand from '../../styles/img/hand.png'\r\nimport {useHistory} from \"react-router\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst GameStart = ({gameConfig}) => {\r\n\r\n    const replayGame = useSelector(({endGameData}) => endGameData,shallowEqual);\r\n    const history = useHistory();\r\n\r\n    const startGame = () => {\r\n        if(gameConfig){\r\n            history.push('/question-1');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <section className={`game-start ${!replayGame.newGame && 'game-start-false'}`}>\r\n            <img className={`game-start__hand ${!replayGame.newGame && 'game-start__hand-false'}`} src={hand} alt='hand'/>\r\n            <div className={`game-start__right-box ${!replayGame.newGame && 'game-start__right-box-false'}`}>\r\n                {!replayGame.newGame && <p className='game-start__total-score'>Total score:</p>}\r\n                <h1 className={`game-start__h1 ${!replayGame.newGame && 'game-start__total-score-false'}`}>{(!replayGame.newGame) ? `${replayGame.gain} earned` : 'Who wants to be a millionaire?'}</h1>\r\n                <Button onClick={startGame} className='game-start__start'>{!replayGame.newGame ? 'Try again' : 'Start'}</Button>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nGameStart.propTypes = {\r\n    gameConfig: PropTypes.array.isRequired,\r\n};\r\n\r\nGameStart.defaultProps = {\r\n    gameConfig: [],\r\n}\r\n\r\nexport default GameStart;","import React,{useState,useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst GainPanel = ({mobile, indexV, data}) => {\r\n\r\n    const [gainsArray, setGainsArray] = useState();\r\n\r\n    useEffect(() => {\r\n        const newData = data.slice();\r\n        newData.reverse()\r\n        setGainsArray(newData);\r\n    },[data]);\r\n\r\n    return(\r\n        <div className={`gain-panel ${mobile && 'gain-panel-phone'}`}>\r\n            {gainsArray && gainsArray.map((elem,index) => {\r\n                return(\r\n                    <div\r\n                        key={index}\r\n                        className={`\r\n                        gain-panel__gain \r\n                        ${11-index < indexV && 'gain-panel__gain-passed '}\r\n                        ${11-index === indexV && 'gain-panel__gain-actual '}\r\n                        ${11-index > indexV && 'gain-panel__gain-future '}\r\n                        `}\r\n                    ><p>{elem.gain}</p></div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nGainPanel.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    indexV: PropTypes.number.isRequired,\r\n    mobile: PropTypes.bool,\r\n};\r\n\r\nGainPanel.defaultProps = {\r\n    data: [],\r\n    indexV: 1,\r\n    mobile: false,\r\n}\r\n\r\nexport default GainPanel;","import React,{useState} from 'react';\r\nimport Button from \"../../components/Button\";\r\nimport {useHistory} from \"react-router\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {creatEndGameData} from \"../../store/actions/actionCreator\";\r\nimport GainPanel from \"../../components/GainPanel\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst arrEN = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\nconst Question = ({questionNumber, question, answers, correctAnswers, gain, data}) => {\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [modalState, setModalState] = useState(false);\r\n\r\n    const sendGameData = (value) => dispatch(creatEndGameData(value));\r\n\r\n    const handleChooseAnswer = ({target}) => {\r\n        setDisabled('disabled');\r\n        let selectedValue = target.id;\r\n        let button = target;\r\n        if(!target.id){\r\n            selectedValue = target.parentNode.id;\r\n            button = target.parentNode;\r\n        }\r\n        if(correctAnswers.includes(selectedValue)){\r\n            button.classList.remove('question__answer');\r\n            button.classList.add('question__answer-green');\r\n            if(questionNumber === 12) {\r\n                sendGameData({\r\n                    newGame: false,\r\n                    gain,\r\n                });\r\n                setTimeout(() => {\r\n                    history.push('/');\r\n                },1000);\r\n            } else {\r\n                setTimeout(() => {\r\n                    history.push(`/question-${questionNumber+1}`);\r\n                },1000);\r\n            }\r\n        } else {\r\n            button.classList.remove('question__answer');\r\n            button.classList.add('question__answer-red');\r\n            sendGameData({\r\n                newGame: false,\r\n                gain,\r\n            });\r\n            setTimeout(() => {\r\n                history.push('/');\r\n            },1000);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <section className='question'>\r\n            <Button onClick={() => history.push('/')} className='question-return'><i className=\"fas fa-arrow-left\"> </i></Button>\r\n            <Button className='question__show-gain' onClick={() => setModalState(!modalState)}>\r\n                {!modalState && <i className=\"fas fa-bars\"> </i>}\r\n                {modalState && <i className=\"fas fa-times\"> </i>}\r\n            </Button>\r\n            <div className={`${(modalState) ? 'question__modal-box' : 'question__modal-hide'}`}>\r\n                <GainPanel indexV={questionNumber-1} data={data} mobile={true} />\r\n            </div>\r\n            <div className='question__content'>\r\n                <h2 className='question__title'>{question}</h2>\r\n                <div className='question__answers-box'>\r\n                    {answers.map((item,index) => {\r\n                        return(\r\n                            <Button\r\n                                disabled={disabled}\r\n                                id={item}\r\n                                key={index}\r\n                                onClick={handleChooseAnswer}\r\n                                className='question__answer'\r\n                            >\r\n                                <p className='question__answer-letter'>{arrEN[index]}</p>\r\n                                <p>{item}</p>\r\n                            </Button>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <GainPanel indexV={questionNumber-1} data={data}/>\r\n        </section>\r\n    );\r\n};\r\n\r\nQuestion.propTypes = {\r\n    questionNumber: PropTypes.number.isRequired,\r\n    question: PropTypes.string,\r\n    answers: PropTypes.array.isRequired,\r\n    correctAnswers: PropTypes.array.isRequired,\r\n    gain: PropTypes.string,\r\n    data: PropTypes.array.isRequired,\r\n};\r\n\r\nQuestion.defaultProps = {\r\n    questionNumber: 1,\r\n    question: '',\r\n    answers: [],\r\n    correctAnswers: [],\r\n    gain: '',\r\n    data: [],\r\n};\r\n\r\nexport default Question;","import {END_GAME_DATA} from './actions';\r\n\r\n\r\nexport const creatEndGameData = (payload) => {\r\n    return {type: END_GAME_DATA, payload}\r\n};","export const END_GAME_DATA = 'END_GAME_DATA';","import React,{ useState,useEffect } from 'react';\nimport {HashRouter, Route} from 'react-router-dom';\nimport GameStart from \"./sections/GameStart\";\nimport './styles/index.scss';\nimport Question from \"./sections/Question\";\n\nconst App = () => {\n\n    const [gameConfig,setGameConfig] = useState([]);\n\n    useEffect(() => {\n        fetch('./gameConfig.json')\n            .then(response => response.json())\n            .then(result => setGameConfig(result));\n    });\n\n  return (\n      <HashRouter\n          hashType={\"slash\"}\n          basename={\"/game\"}\n      >\n          <>\n              <Route exact path='/'>\n                  <GameStart gameConfig={gameConfig}/>\n              </Route>\n              {gameConfig && gameConfig.map((elem,index) => {\n                  return(\n                      <Route path={`/question-${index+1}`} key={`${index}-route`}>\n                          <Question\n                              questionNumber={index+1}\n                              key={index}\n                              data={gameConfig}\n                              {...elem}\n                          />\n                      </Route>\n                  )\n              })}\n          </>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from \"redux\";\r\nimport endGameData from \"./endGameData\";\r\n\r\n\r\nexport default combineReducers({\r\n    endGameData,\r\n});","export default (state = {newGame: true}, action) => {\r\n    switch (action.type){\r\n        case 'END_GAME_DATA':\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore} from \"redux\";\r\nimport reducer from './reducers/index';\r\n\r\n\r\nconst store =createStore(reducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./store/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}